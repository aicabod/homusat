// from horsatp/input
/*** original HORS >>
%HORS
S -> nop (alloc (gc (Main end))).
Main k -> gc (br end (Proc1 (Main k))).
Proc1 k -> alloc (nop (Proc2 k)).
Proc2 k -> alloc (nop (Proc3 k)).
Proc3 k -> alloc (nop (Proc4 k)).
Proc4 k -> alloc (nop k).
%APT
intial state: q0
transitions:
q0 nop -> (1, q0).
q0 alloc -> (1, q1).
q0 gc -> (1, q2).
q0 end -> \true.
q0 br -> (1, q0) \land (2, q0).
q1 nop -> (1, q0).
q1 alloc -> (1, q1).
q1 gc -> (1, q2).
q1 end -> \true.
q1 br -> (1, q0) \land (2, q0).
q2 nop -> (1, q0).
q2 alloc -> (1, q1).
q2 gc -> (1, q2).
q2 end -> \true.
q2 br -> (1, q0) \land (2, q0).
priorities:
q0 -> 0.
q1 -> 1.
q2 -> 2.
<< original HORS ***/
%HES
S#2 =_\nu S#0;
F'26#2 =_\nu F'26#0;
Main#2 =_\nu Main#0;
F'28#2 =_\nu F'28#0;
F'27#2 =_\nu F'27#0;
Proc1#2 =_\nu Proc1#0;
F'29#2 =_\nu F'29#0;
Proc2#2 =_\nu Proc2#0;
F'30#2 =_\nu F'30#0;
Proc3#2 =_\nu Proc3#0;
F'31#2 =_\nu F'31#0;
Proc4#2 =_\nu Proc4#0;
S#1 =_\mu S#0;
F'26#1 =_\mu F'26#0;
Main#1 =_\mu Main#0;
F'28#1 =_\mu F'28#0;
F'27#1 =_\mu F'27#0;
Proc1#1 =_\mu Proc1#0;
F'29#1 =_\mu F'29#0;
Proc2#1 =_\mu Proc2#0;
F'30#1 =_\mu F'30#0;
Proc3#1 =_\mu Proc3#0;
F'31#1 =_\mu F'31#0;
Proc4#1 =_\mu Proc4#0;
S#0 =_\nu nop (alloc F'26#0 F'26#1 F'26#2) (alloc F'26#1 F'26#1 F'26#2) (alloc F'26#2 F'26#2 F'26#2);
F'26#0 =_\nu gc (Main#0 end end end) (Main#1 end end end) (Main#2 end end end);
Main#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. gc (F'28#0 k#0 k#1 k#2) (F'28#1 k#1 k#1 k#2) (F'28#2 k#2 k#2 k#2);
F'28#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. br end end end (F'27#0 k#0 k#1 k#2) (F'27#1 k#1 k#1 k#2) (F'27#2 k#2 k#2 k#2);
F'27#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. Proc1#0 (Main#0 k#0 k#1 k#2) (Main#1 k#1 k#1 k#2) (Main#2 k#2 k#2 k#2);
Proc1#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. alloc (F'29#0 k#0 k#1 k#2) (F'29#1 k#1 k#1 k#2) (F'29#2 k#2 k#2 k#2);
F'29#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. nop (Proc2#0 k#0 k#1 k#2) (Proc2#1 k#1 k#1 k#2) (Proc2#2 k#2 k#2 k#2);
Proc2#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. alloc (F'30#0 k#0 k#1 k#2) (F'30#1 k#1 k#1 k#2) (F'30#2 k#2 k#2 k#2);
F'30#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. nop (Proc3#0 k#0 k#1 k#2) (Proc3#1 k#1 k#1 k#2) (Proc3#2 k#2 k#2 k#2);
Proc3#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. alloc (F'31#0 k#0 k#1 k#2) (F'31#1 k#1 k#1 k#2) (F'31#2 k#2 k#2 k#2);
F'31#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. nop (Proc4#0 k#0 k#1 k#2) (Proc4#1 k#1 k#1 k#2) (Proc4#2 k#2 k#2 k#2);
Proc4#0 =_\nu \lambda k#0. \lambda k#1. \lambda k#2. alloc (nop k#0 k#1 k#2) (nop k#1 k#1 k#2) (nop k#2 k#2 k#2);
nop =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. <nop#0>[$1]y$1#0 \lor <nop#1>[$1]y$1#1 \lor <nop#2>[$1]y$1#2;
alloc =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. <alloc#0>[$1]y$1#0 \lor <alloc#1>[$1]y$1#1 \lor <alloc#2>[$1]y$1#2;
gc =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. <gc#0>[$1]y$1#0 \lor <gc#1>[$1]y$1#1 \lor <gc#2>[$1]y$1#2;
end =_\nu <end#0>\true \lor <end#1>\true \lor <end#2>\true;
br =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. \lambda y$2#0. \lambda y$2#1. \lambda y$2#2. <br#0>([$1]y$1#0 \land [$2]y$2#0) \lor <br#1>([$1]y$1#1 \land [$2]y$2#1) \lor <br#2>([$1]y$1#2 \land [$2]y$2#2);
%LTS
initial state: @q0
transitions:
@q0 nop#0 -> $1@q0.
@q0 alloc#0 -> $1@q1.
@q0 gc#0 -> $1@q2.
@q0 end#0 -> true.
@q0 br#0 -> $1@q0&$2@q0.
$1@q0 $1 -> @q0.
$1@q1 $1 -> @q1.
@q1 nop#1 -> $1@q0.
@q1 alloc#1 -> $1@q1.
@q1 gc#1 -> $1@q2.
@q1 end#1 -> true.
@q1 br#1 -> $1@q0&$2@q0.
$1@q2 $1 -> @q2.
@q2 nop#2 -> $1@q0.
@q2 alloc#2 -> $1@q1.
@q2 gc#2 -> $1@q2.
@q2 end#2 -> true.
@q2 br#2 -> $1@q0&$2@q0.
$1@q0&$2@q0 $1 -> @q0.
$1@q0&$2@q0 $2 -> @q0.
