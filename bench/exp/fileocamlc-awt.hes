// from travmc2/No
/*** original HORS >>
%HORS
S -> ReadSec C1.
C1 rstring rstruct clreader -> rstruct (rstring (Loop rstring rstruct clreader)).
Loop rstring rstruct clreader -> br (DLLinit rstring rstruct clreader) (Loop rstring rstruct clreader).
DLLinit rstring rstruct clreader -> rstring (rstruct (clreader end)).
ReadSec k -> br (k Nop Nop Nop) (Newr (ReadSec2 k)).
ReadSec2 k x -> ReadToc x (ReadSec3 x k).
ReadSec3 x k -> k (Rsecstr x) (Rsecstruct x) (Close x).
Nop k -> k.
ReadToc x k -> SeekIn x (InputBinary x (ReallyInput x (SeekIn x (ReadTocLoop x k)))).
ReadTocLoop x k -> br k (ReallyInput x (InputBinary x (ReadTocLoop x k))).
Rsecstr x k -> SeekSec x (ReallyInput x k).
Rsecstruct x k -> SeekSec x (InputValue x k).
SeekSec x k -> SeekSub x k.
SeekSub x k -> br (SeekIn x k) (SeekSub x (SeekIn x k)).
SeekIn x k -> Read x k.
ReallyInput x k -> Read x k.
InputBinary x k -> Read x k.
InputValue x k -> Read x k.
I x y -> x y.
K x y -> y.
Newr k -> br (newr (k I)) (k K).
Close x k -> x Close_gen k.
Read x k -> x Read_gen k.
Close_gen gen423 -> close gen423.
Read_gen gen424 -> read gen424.
%APT
intial state: q0
transitions:
q0 br -> (2, q0) \land (1, q0).
q0 end -> \true.
q0 newr -> (1, qr).
qr br -> ((2, qr) \land (1, qc)) \lor ((2, qr) \land (1, qr)).
qr newr -> (1, qany).
qr close -> (1, qc).
qr read -> (1, qr).
qany br -> (2, qany) \land (1, qany).
qany end -> \true.
qany close -> (1, qany).
qany read -> (1, qany).
qc end -> \true.
priorities:
q0 -> 2.
qr -> 1.
qany -> 2.
qc -> 2.
<< original HORS ***/
%HES
S#2 =_\nu S#1;
C1#2 =_\nu C1#1;
F'113#2 =_\nu F'113#1;
Loop#2 =_\nu Loop#1;
DLLinit#2 =_\nu DLLinit#1;
F'114#2 =_\nu F'114#1;
ReadSec#2 =_\nu ReadSec#1;
F'115#2 =_\nu F'115#1;
ReadSec2#2 =_\nu ReadSec2#1;
ReadSec3#2 =_\nu ReadSec3#1;
Nop#2 =_\nu Nop#1;
ReadToc#2 =_\nu ReadToc#1;
F'118#2 =_\nu F'118#1;
F'117#2 =_\nu F'117#1;
F'116#2 =_\nu F'116#1;
ReadTocLoop#2 =_\nu ReadTocLoop#1;
F'120#2 =_\nu F'120#1;
F'119#2 =_\nu F'119#1;
Rsecstr#2 =_\nu Rsecstr#1;
Rsecstruct#2 =_\nu Rsecstruct#1;
SeekSec#2 =_\nu SeekSec#1;
SeekSub#2 =_\nu SeekSub#1;
F'121#2 =_\nu F'121#1;
SeekIn#2 =_\nu SeekIn#1;
ReallyInput#2 =_\nu ReallyInput#1;
InputBinary#2 =_\nu InputBinary#1;
InputValue#2 =_\nu InputValue#1;
I#2 =_\nu I#1;
K#2 =_\nu K#1;
Newr#2 =_\nu Newr#1;
F'122#2 =_\nu F'122#1;
Close#2 =_\nu Close#1;
Read#2 =_\nu Read#1;
Close_gen#2 =_\nu Close_gen#1;
Read_gen#2 =_\nu Read_gen#1;
S#1 =_\mu ReadSec#1 C1#1 C1#2;
C1#1 =_\mu \lambda rstring#1. \lambda rstring#2. \lambda rstruct#1. \lambda rstruct#2. \lambda clreader#1. \lambda clreader#2. rstruct#1 (F'113#1 rstring#1 rstring#2 rstruct#1 rstruct#2 clreader#1 clreader#2) (F'113#2 rstring#2 rstring#2 rstruct#2 rstruct#2 clreader#2 clreader#2);
F'113#1 =_\mu \lambda rstring#1. \lambda rstring#2. \lambda rstruct#1. \lambda rstruct#2. \lambda clreader#1. \lambda clreader#2. rstring#1 (Loop#1 rstring#1 rstring#2 rstruct#1 rstruct#2 clreader#1 clreader#2) (Loop#2 rstring#2 rstring#2 rstruct#2 rstruct#2 clreader#2 clreader#2);
Loop#1 =_\mu \lambda rstring#1. \lambda rstring#2. \lambda rstruct#1. \lambda rstruct#2. \lambda clreader#1. \lambda clreader#2. br (DLLinit#1 rstring#1 rstring#2 rstruct#1 rstruct#2 clreader#1 clreader#2) (DLLinit#2 rstring#2 rstring#2 rstruct#2 rstruct#2 clreader#2 clreader#2) (Loop#1 rstring#1 rstring#2 rstruct#1 rstruct#2 clreader#1 clreader#2) (Loop#2 rstring#2 rstring#2 rstruct#2 rstruct#2 clreader#2 clreader#2);
DLLinit#1 =_\mu \lambda rstring#1. \lambda rstring#2. \lambda rstruct#1. \lambda rstruct#2. \lambda clreader#1. \lambda clreader#2. rstring#1 (F'114#1 rstruct#1 rstruct#2 clreader#1 clreader#2) (F'114#2 rstruct#2 rstruct#2 clreader#2 clreader#2);
F'114#1 =_\mu \lambda rstruct#1. \lambda rstruct#2. \lambda clreader#1. \lambda clreader#2. rstruct#1 (clreader#1 end end) (clreader#2 end end);
ReadSec#1 =_\mu \lambda k#1. \lambda k#2. br (k#1 Nop#1 Nop#2 Nop#1 Nop#2 Nop#1 Nop#2) (k#2 Nop#2 Nop#2 Nop#2 Nop#2 Nop#2 Nop#2) (F'115#1 k#1 k#2) (F'115#2 k#2 k#2);
F'115#1 =_\mu \lambda k#1. \lambda k#2. Newr#1 (ReadSec2#1 k#1 k#2) (ReadSec2#2 k#2 k#2);
ReadSec2#1 =_\mu \lambda k#1. \lambda k#2. \lambda x#1. \lambda x#2. ReadToc#1 x#1 x#2 (ReadSec3#1 x#1 x#2 k#1 k#2) (ReadSec3#2 x#2 x#2 k#2 k#2);
ReadSec3#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. k#1 (Rsecstr#1 x#1 x#2) (Rsecstr#2 x#2 x#2) (Rsecstruct#1 x#1 x#2) (Rsecstruct#2 x#2 x#2) (Close#1 x#1 x#2) (Close#2 x#2 x#2);
Nop#1 =_\mu \lambda k#1. \lambda k#2. k#1;
ReadToc#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. SeekIn#1 x#1 x#2 (F'118#1 x#1 x#2 k#1 k#2) (F'118#2 x#2 x#2 k#2 k#2);
F'118#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. InputBinary#1 x#1 x#2 (F'117#1 x#1 x#2 k#1 k#2) (F'117#2 x#2 x#2 k#2 k#2);
F'117#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. ReallyInput#1 x#1 x#2 (F'116#1 x#1 x#2 k#1 k#2) (F'116#2 x#2 x#2 k#2 k#2);
F'116#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. SeekIn#1 x#1 x#2 (ReadTocLoop#1 x#1 x#2 k#1 k#2) (ReadTocLoop#2 x#2 x#2 k#2 k#2);
ReadTocLoop#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. br k#1 k#2 (F'120#1 x#1 x#2 k#1 k#2) (F'120#2 x#2 x#2 k#2 k#2);
F'120#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. ReallyInput#1 x#1 x#2 (F'119#1 x#1 x#2 k#1 k#2) (F'119#2 x#2 x#2 k#2 k#2);
F'119#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. InputBinary#1 x#1 x#2 (ReadTocLoop#1 x#1 x#2 k#1 k#2) (ReadTocLoop#2 x#2 x#2 k#2 k#2);
Rsecstr#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. SeekSec#1 x#1 x#2 (ReallyInput#1 x#1 x#2 k#1 k#2) (ReallyInput#2 x#2 x#2 k#2 k#2);
Rsecstruct#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. SeekSec#1 x#1 x#2 (InputValue#1 x#1 x#2 k#1 k#2) (InputValue#2 x#2 x#2 k#2 k#2);
SeekSec#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. SeekSub#1 x#1 x#2 k#1 k#2;
SeekSub#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. br (SeekIn#1 x#1 x#2 k#1 k#2) (SeekIn#2 x#2 x#2 k#2 k#2) (F'121#1 x#1 x#2 k#1 k#2) (F'121#2 x#2 x#2 k#2 k#2);
F'121#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. SeekSub#1 x#1 x#2 (SeekIn#1 x#1 x#2 k#1 k#2) (SeekIn#2 x#2 x#2 k#2 k#2);
SeekIn#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. Read#1 x#1 x#2 k#1 k#2;
ReallyInput#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. Read#1 x#1 x#2 k#1 k#2;
InputBinary#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. Read#1 x#1 x#2 k#1 k#2;
InputValue#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. Read#1 x#1 x#2 k#1 k#2;
I#1 =_\mu \lambda x#1. \lambda x#2. \lambda y#1. \lambda y#2. x#1 y#1 y#2;
K#1 =_\mu \lambda x#1. \lambda x#2. \lambda y#1. \lambda y#2. y#1;
Newr#1 =_\mu \lambda k#1. \lambda k#2. br (F'122#1 k#1 k#2) (F'122#2 k#2 k#2) (k#1 K#1 K#2) (k#2 K#2 K#2);
F'122#1 =_\mu \lambda k#1. \lambda k#2. newr (k#1 I#1 I#2) (k#2 I#2 I#2);
Close#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. x#1 Close_gen#1 Close_gen#2 k#1 k#2;
Read#1 =_\mu \lambda x#1. \lambda x#2. \lambda k#1. \lambda k#2. x#1 Read_gen#1 Read_gen#2 k#1 k#2;
Close_gen#1 =_\mu \lambda gen423#1. \lambda gen423#2. close gen423#1 gen423#2;
Read_gen#1 =_\mu \lambda gen424#1. \lambda gen424#2. read gen424#1 gen424#2;
br =_\nu \lambda y$1#1. \lambda y$1#2. \lambda y$2#1. \lambda y$2#2. <br#1>([$1]y$1#1 \land [$2]y$2#1) \lor <br#2>([$1]y$1#2 \land [$2]y$2#2);
end =_\nu <end#1>\true \lor <end#2>\true;
newr =_\nu \lambda y$1#1. \lambda y$1#2. <newr#1>[$1]y$1#1 \lor <newr#2>[$1]y$1#2;
close =_\nu \lambda y$1#1. \lambda y$1#2. <close#1>[$1]y$1#1 \lor <close#2>[$1]y$1#2;
read =_\nu \lambda y$1#1. \lambda y$1#2. <read#1>[$1]y$1#1 \lor <read#2>[$1]y$1#2;
%LTS
initial state: @q0
transitions:
@q0 br#2 -> $1@q0&$2@q0.
@q0 end#2 -> true.
@q0 newr#2 -> $1@qr.
$1@q0&$2@q0 $1 -> @q0.
$1@q0&$2@q0 $2 -> @q0.
$1@qr $1 -> @qr.
@qr br#1 -> $1@qr&$2@qr.
@qr br#1 -> $1@qc&$2@qr.
@qr newr#1 -> $1@qany.
@qr close#1 -> $1@qc.
@qr read#1 -> $1@qr.
$1@qr&$2@qr $1 -> @qr.
$1@qr&$2@qr $2 -> @qr.
$1@qc&$2@qr $1 -> @qc.
$1@qc&$2@qr $2 -> @qr.
@qc end#2 -> true.
$1@qany $1 -> @qany.
@qany br#2 -> $1@qany&$2@qany.
@qany end#2 -> true.
@qany close#2 -> $1@qany.
@qany read#2 -> $1@qany.
$1@qc $1 -> @qc.
$1@qany&$2@qany $1 -> @qany.
$1@qany&$2@qany $2 -> @qany.
