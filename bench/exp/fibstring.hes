// from horsat2/compress
/*** original HORS >>
%HORS
S -> Twice (Twice (Twice (Twice (Twice (Twice (Twice (Twice (Twice (Twice F))))))))) Fst b a.
Fst x y -> x e.
F k x y -> k y (Concat y x).
Twice f k x y -> f (f k) x y.
Concat x y c -> x (y c).
%APT
intial state: q0
transitions:
q0 b -> (1, q1).
q0 a -> (1, q0).
q0 e -> \true.
q1 b -> (1, q2).
q1 a -> (1, q0).
q1 e -> \true.
q2 b -> (1, q2).
q2 a -> (1, q2).
priorities:
q0 -> 0.
q1 -> 0.
q2 -> 0.
<< original HORS ***/
%HES
S#0 =_\nu Twice#0 (Twice#0 F'36#0) Fst#0 b a;
F'36#0 =_\nu Twice#0 (Twice#0 F'35#0);
F'35#0 =_\nu Twice#0 (Twice#0 F'34#0);
F'34#0 =_\nu Twice#0 (Twice#0 F'33#0);
F'33#0 =_\nu Twice#0 (Twice#0 F#0);
Fst#0 =_\nu \lambda x#0. \lambda y#0. x#0 e;
F#0 =_\nu \lambda k#0. \lambda x#0. \lambda y#0. k#0 y#0 (Concat#0 y#0 x#0);
Twice#0 =_\nu \lambda f#0. \lambda k#0. \lambda x#0. \lambda y#0. f#0 (f#0 k#0) x#0 y#0;
Concat#0 =_\nu \lambda x#0. \lambda y#0. \lambda c#0. x#0 (y#0 c#0);
b =_\nu \lambda y$1#0. <b#0>[$1]y$1#0;
a =_\nu \lambda y$1#0. <a#0>[$1]y$1#0;
e =_\nu <e#0>\true;
%LTS
initial state: @q0
transitions:
@q0 b#0 -> $1@q1.
@q0 a#0 -> $1@q0.
@q0 e#0 -> true.
$1@q1 $1 -> @q1.
@q1 b#0 -> $1@q2.
@q1 a#0 -> $1@q0.
@q1 e#0 -> true.
$1@q0 $1 -> @q0.
$1@q2 $1 -> @q2.
@q2 b#0 -> $1@q2.
@q2 a#0 -> $1@q2.
