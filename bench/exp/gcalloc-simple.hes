// from horsatp/input
/*** original HORS >>
%HORS
S -> Main Fst.
Main f -> br end (f (nop (Main Snd)) (alloc (Main Thd)) (gc (Main Fst))).
Fst x y z -> x.
Snd x y z -> y.
Thd x y z -> z.
%APT
intial state: q0
transitions:
q0 br -> (1, q0) \land (2, q0).
q0 end -> \true.
q0 nop -> (1, q0).
q0 alloc -> (1, q1).
q0 gc -> (1, q2).
q1 br -> (1, q0) \land (2, q0).
q1 nop -> (1, q0).
q1 alloc -> (1, q1).
q1 gc -> (1, q2).
q2 br -> (1, q0) \land (2, q0).
q2 nop -> (1, q0).
q2 alloc -> (1, q1).
q2 gc -> (1, q2).
priorities:
q0 -> 0.
q1 -> 1.
q2 -> 2.
<< original HORS ***/
%HES
S#2 =_\nu S#0;
Main#2 =_\nu Main#0;
F'34#2 =_\nu F'34#0;
F'33#2 =_\nu F'33#0;
F'32#2 =_\nu F'32#0;
Fst#2 =_\nu Fst#0;
Snd#2 =_\nu Snd#0;
Thd#2 =_\nu Thd#0;
S#1 =_\mu S#0;
Main#1 =_\mu Main#0;
F'34#1 =_\mu F'34#0;
F'33#1 =_\mu F'33#0;
F'32#1 =_\mu F'32#0;
Fst#1 =_\mu Fst#0;
Snd#1 =_\mu Snd#0;
Thd#1 =_\mu Thd#0;
S#0 =_\nu Main#0 Fst#0 Fst#1 Fst#2;
Main#0 =_\nu \lambda f#0. \lambda f#1. \lambda f#2. br end end end (f#0 F'32#0 F'32#1 F'32#2 F'33#0 F'33#1 F'33#2 F'34#0 F'34#1 F'34#2) (f#1 F'32#1 F'32#1 F'32#2 F'33#1 F'33#1 F'33#2 F'34#1 F'34#1 F'34#2) (f#2 F'32#2 F'32#2 F'32#2 F'33#2 F'33#2 F'33#2 F'34#2 F'34#2 F'34#2);
F'34#0 =_\nu gc (Main#0 Fst#0 Fst#1 Fst#2) (Main#1 Fst#1 Fst#1 Fst#2) (Main#2 Fst#2 Fst#2 Fst#2);
F'33#0 =_\nu alloc (Main#0 Thd#0 Thd#1 Thd#2) (Main#1 Thd#1 Thd#1 Thd#2) (Main#2 Thd#2 Thd#2 Thd#2);
F'32#0 =_\nu nop (Main#0 Snd#0 Snd#1 Snd#2) (Main#1 Snd#1 Snd#1 Snd#2) (Main#2 Snd#2 Snd#2 Snd#2);
Fst#0 =_\nu \lambda x#0. \lambda x#1. \lambda x#2. \lambda y#0. \lambda y#1. \lambda y#2. \lambda z#0. \lambda z#1. \lambda z#2. x#0;
Snd#0 =_\nu \lambda x#0. \lambda x#1. \lambda x#2. \lambda y#0. \lambda y#1. \lambda y#2. \lambda z#0. \lambda z#1. \lambda z#2. y#0;
Thd#0 =_\nu \lambda x#0. \lambda x#1. \lambda x#2. \lambda y#0. \lambda y#1. \lambda y#2. \lambda z#0. \lambda z#1. \lambda z#2. z#0;
br =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. \lambda y$2#0. \lambda y$2#1. \lambda y$2#2. <br#0>([$1]y$1#0 \land [$2]y$2#0) \lor <br#1>([$1]y$1#1 \land [$2]y$2#1) \lor <br#2>([$1]y$1#2 \land [$2]y$2#2);
end =_\nu <end#0>\true \lor <end#1>\true \lor <end#2>\true;
nop =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. <nop#0>[$1]y$1#0 \lor <nop#1>[$1]y$1#1 \lor <nop#2>[$1]y$1#2;
alloc =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. <alloc#0>[$1]y$1#0 \lor <alloc#1>[$1]y$1#1 \lor <alloc#2>[$1]y$1#2;
gc =_\nu \lambda y$1#0. \lambda y$1#1. \lambda y$1#2. <gc#0>[$1]y$1#0 \lor <gc#1>[$1]y$1#1 \lor <gc#2>[$1]y$1#2;
%LTS
initial state: @q0
transitions:
@q0 br#0 -> $1@q0&$2@q0.
@q0 end#0 -> true.
@q0 nop#0 -> $1@q0.
@q0 alloc#0 -> $1@q1.
@q0 gc#0 -> $1@q2.
$1@q0&$2@q0 $1 -> @q0.
$1@q0&$2@q0 $2 -> @q0.
$1@q0 $1 -> @q0.
$1@q1 $1 -> @q1.
@q1 br#1 -> $1@q0&$2@q0.
@q1 nop#1 -> $1@q0.
@q1 alloc#1 -> $1@q1.
@q1 gc#1 -> $1@q2.
$1@q2 $1 -> @q2.
@q2 br#2 -> $1@q0&$2@q0.
@q2 nop#2 -> $1@q0.
@q2 alloc#2 -> $1@q1.
@q2 gc#2 -> $1@q2.
