// from horsat2/ruv
/*** original HORS >>
%HORS
S -> NewL C1.
C1 x -> C2 (Unlock x) (Lock x).
Unlock x k -> x unlock k.
Lock x k -> x lock k.
C2 h1 h2 -> h2 (F h1 end).
F g k -> br (g k) (NewL (C3 g k)).
C3 g k x -> C4 g (Unlock x) (Lock x) k.
C4 g h1 h2 k -> h2 (F h1 (g k)).
NewL k -> br (newl (k I)) (k K).
I x y -> x y.
K x y -> y.
%APT
intial state: q0
transitions:
q0 end -> \true.
q0 br -> (2, q0) \land (1, q0).
q0 newl -> (1, q1).
q1 lock -> (1, q2).
q1 end -> \true.
q1 br -> (2, q1) \land (1, q1).
q1 newl -> (1, qany).
q2 unlock -> (1, q1).
q2 br -> (2, q2) \land (1, q2).
q2 newl -> (1, qany).
qany unlock -> (1, qany).
qany lock -> (1, qany).
qany end -> \true.
qany br -> (2, qany) \land (1, qany).
qany newl -> (1, qany).
priorities:
q0 -> 0.
q1 -> 0.
q2 -> 0.
qany -> 0.
<< original HORS ***/
%HES
S#0 =_\nu NewL#0 C1#0;
C1#0 =_\nu \lambda x#0. C2#0 (Unlock#0 x#0) (Lock#0 x#0);
Unlock#0 =_\nu \lambda x#0. \lambda k#0. x#0 unlock k#0;
Lock#0 =_\nu \lambda x#0. \lambda k#0. x#0 lock k#0;
C2#0 =_\nu \lambda h1#0. \lambda h2#0. h2#0 (F#0 h1#0 end);
F#0 =_\nu \lambda g#0. \lambda k#0. br (g#0 k#0) (F'58#0 g#0 k#0);
F'58#0 =_\nu \lambda g#0. \lambda k#0. NewL#0 (C3#0 g#0 k#0);
C3#0 =_\nu \lambda g#0. \lambda k#0. \lambda x#0. C4#0 g#0 (Unlock#0 x#0) (Lock#0 x#0) k#0;
C4#0 =_\nu \lambda g#0. \lambda h1#0. \lambda h2#0. \lambda k#0. h2#0 (F'59#0 g#0 h1#0 k#0);
F'59#0 =_\nu \lambda g#0. \lambda h1#0. \lambda k#0. F#0 h1#0 (g#0 k#0);
NewL#0 =_\nu \lambda k#0. br (F'60#0 k#0) (k#0 K#0);
F'60#0 =_\nu \lambda k#0. newl (k#0 I#0);
I#0 =_\nu \lambda x#0. \lambda y#0. x#0 y#0;
K#0 =_\nu \lambda x#0. \lambda y#0. y#0;
unlock =_\nu \lambda y$1#0. <unlock#0>[$1]y$1#0;
lock =_\nu \lambda y$1#0. <lock#0>[$1]y$1#0;
end =_\nu <end#0>\true;
br =_\nu \lambda y$1#0. \lambda y$2#0. <br#0>([$1]y$1#0 \land [$2]y$2#0);
newl =_\nu \lambda y$1#0. <newl#0>[$1]y$1#0;
%LTS
initial state: @q0
transitions:
@q0 end#0 -> true.
@q0 br#0 -> $1@q0&$2@q0.
@q0 newl#0 -> $1@q1.
$1@q0&$2@q0 $1 -> @q0.
$1@q0&$2@q0 $2 -> @q0.
$1@q1 $1 -> @q1.
@q1 lock#0 -> $1@q2.
@q1 end#0 -> true.
@q1 br#0 -> $1@q1&$2@q1.
@q1 newl#0 -> $1@qany.
$1@q2 $1 -> @q2.
@q2 unlock#0 -> $1@q1.
@q2 br#0 -> $1@q2&$2@q2.
@q2 newl#0 -> $1@qany.
$1@q1&$2@q1 $1 -> @q1.
$1@q1&$2@q1 $2 -> @q1.
$1@qany $1 -> @qany.
@qany unlock#0 -> $1@qany.
@qany lock#0 -> $1@qany.
@qany end#0 -> true.
@qany br#0 -> $1@qany&$2@qany.
@qany newl#0 -> $1@qany.
$1@q2&$2@q2 $1 -> @q2.
$1@q2&$2@q2 $2 -> @q2.
$1@qany&$2@qany $1 -> @qany.
$1@qany&$2@qany $2 -> @qany.
