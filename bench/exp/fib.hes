// from horsat2/examples
/*** original HORS >>
%HORS
S -> FibAux_In3x0 fun1.
fun1 f g -> f nil.
FibAux_In3x0 k -> br (k I (b nil)) (FibAux_In3x2 (fun2 k)).
FibAux_In3x2 k -> FibAux_In3x1 (fun2 k).
FibAux_In3x1 k -> FibAux_In3x0 (fun2 k).
fun2 k f g -> k (Concat f g) f.
Concat f g x -> f (g x).
I x -> x.
%APT
intial state: q0
transitions:
nil nil -> \true.
q1 b -> (2, q0) \land (1, nil).
q0 nil -> \true.
q0 br -> (2, q0) \land (1, q0).
q0 b -> (2, q1) \land (1, nil).
priorities:
nil -> 0.
q1 -> 0.
q0 -> 0.
<< original HORS ***/
%HES
S#0 =_\nu FibAux_In3x0#0 fun1#0;
fun1#0 =_\nu \lambda f#0. \lambda g#0. f#0 nil;
FibAux_In3x0#0 =_\nu \lambda k#0. br (F'37#0 k#0) (F'38#0 k#0);
F'38#0 =_\nu \lambda k#0. FibAux_In3x2#0 (fun2#0 k#0);
F'37#0 =_\nu \lambda k#0. k#0 I#0 (b nil);
FibAux_In3x2#0 =_\nu \lambda k#0. FibAux_In3x1#0 (fun2#0 k#0);
FibAux_In3x1#0 =_\nu \lambda k#0. FibAux_In3x0#0 (fun2#0 k#0);
fun2#0 =_\nu \lambda k#0. \lambda f#0. \lambda g#0. k#0 (Concat#0 f#0 g#0) f#0;
Concat#0 =_\nu \lambda f#0. \lambda g#0. \lambda x#0. f#0 (g#0 x#0);
I#0 =_\nu \lambda x#0. x#0;
nil =_\nu <nil#0>\true;
br =_\nu \lambda y$1#0. \lambda y$2#0. <br#0>([$1]y$1#0 \land [$2]y$2#0);
b =_\nu \lambda y$1#0. \lambda y$2#0. <b#0>([$1]y$1#0 \land [$2]y$2#0);
%LTS
initial state: @q0
transitions:
@nil nil#0 -> true.
@q1 b#0 -> $1@nil&$2@q0.
$1@nil&$2@q0 $1 -> @nil.
$1@nil&$2@q0 $2 -> @q0.
@q0 nil#0 -> true.
@q0 br#0 -> $1@q0&$2@q0.
@q0 b#0 -> $1@nil&$2@q1.
$1@q0&$2@q0 $1 -> @q0.
$1@q0&$2@q0 $2 -> @q0.
$1@nil&$2@q1 $1 -> @nil.
$1@nil&$2@q1 $2 -> @q1.
