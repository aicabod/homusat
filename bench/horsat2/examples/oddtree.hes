/*** original HORS >>
%HORS
S -> F One Three.
F x y -> br x (F y (Plus x y)).
Plus x y -> s x y.
One -> e.
Three -> s (s e e) e.
%APT
intial state: q0
transitions:
odd br -> \false.
odd s -> ((1, even) \land (2, odd)) \lor ((1, odd) \land (2, even)).
odd e -> \true.
q0 br -> (1, odd) \land (2, q0).
q0 s -> \false.
q0 e -> \false.
even br -> \false.
even s -> ((1, even) \land (2, even)) \lor ((1, odd) \land (2, odd)).
even e -> \false.
priorities:
odd -> 0.
q0 -> 0.
even -> 0.
<< original HORS ***/
%HES
S#0 =_\nu F#0 One#0 Three#0;
F#0 =_\nu \lambda x#0. \lambda y#0. br x#0 (F'22#0 x#0 y#0);
F'22#0 =_\nu \lambda x#0. \lambda y#0. F#0 y#0 (Plus#0 x#0 y#0);
Plus#0 =_\nu \lambda x#0. \lambda y#0. s x#0 y#0;
One#0 =_\nu e;
Three#0 =_\nu s (s e e) e;
br =_\nu \lambda y$1#0. \lambda y$2#0. <br#0>([$1]y$1#0 \land [$2]y$2#0);
s =_\nu \lambda y$1#0. \lambda y$2#0. <s#0>([$1]y$1#0 \land [$2]y$2#0);
e =_\nu <e#0>\true;
%LTS
initial state: @q0
transitions:
@odd s#0 -> $1@odd&$2@even.
@odd s#0 -> $1@even&$2@odd.
@odd e#0 -> true.
$1@odd&$2@even $1 -> @odd.
$1@odd&$2@even $2 -> @even.
@even s#0 -> $1@odd&$2@odd.
@even s#0 -> $1@even&$2@even.
$1@even&$2@odd $1 -> @even.
$1@even&$2@odd $2 -> @odd.
@q0 br#0 -> $1@odd&$2@q0.
$1@odd&$2@q0 $1 -> @odd.
$1@odd&$2@q0 $2 -> @q0.
$1@odd&$2@odd $1 -> @odd.
$1@odd&$2@odd $2 -> @odd.
$1@even&$2@even $1 -> @even.
$1@even&$2@even $2 -> @even.
