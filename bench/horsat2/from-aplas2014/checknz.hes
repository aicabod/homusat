/*** original HORS >>
%HORS
S_SSSSS5 -> SSSSS5 c_bot_o c_error_o c_x25.
KK_c_bot_nat c_bot_nat c_error_nat c_succ_x16 c_z -> c_bot_nat.
KK_c_error_nat c_bot_nat c_error_nat c_succ_x16 c_z -> c_error_nat.
KK_c_succ_x16 c_bot_nat c_error_nat c_succ_x16 c_z -> c_succ_x16.
KK_c_z c_bot_nat c_error_nat c_succ_x16 c_z -> c_z.
KK_c_bot_o c_bot_o c_error_o c_x25 -> c_bot_o.
KK_c_error_o c_bot_o c_error_o c_x25 -> c_error_o.
KK_c_x25 c_bot_o c_error_o c_x25 -> c_x25.
SSSSS5 c_bot_o c_error_o c_x25 -> br c_bot_o (SSSSS c_bot_o c_error_o c_x25).
K_ok c_bot_o c_error_o c_x25 -> c_x25.
K_succ x0 c_bot_nat c_error_nat c_succ_x16 c_z -> x0 c_succ_x16 c_error_nat c_succ_x16 c_succ_x16.
K_z c_bot_nat c_error_nat c_succ_x16 c_z -> c_z.
K_error_nat c_bot_nat c_error_nat c_succ_x16 c_z -> c_error_nat.
K_error_o c_bot_o c_error_o c_x25 -> c_error_o.
SSSSS c_bot_o c_error_o c_x25 -> Main1 S3 c_bot_o c_error_o c_x25.
N c_bot_nat c_error_nat c_succ_x16 c_z -> br (K_succ K_z c_bot_nat c_error_nat c_succ_x16 c_z) (K_succ N4 c_bot_nat c_error_nat c_succ_x16 c_z).
S c_bot_nat c_error_nat c_succ_x16 c_z -> N4 c_bot_nat c_error_nat c_succ_x16 c_z.
Check x0 c_bot_o c_error_o c_x25 -> x0 c_bot_o c_error_o (K_ok c_bot_o c_error_o c_x25) (K_error_o c_bot_o c_error_o c_x25).
Main x0 c_bot_o c_error_o c_x25 -> Check2 x0 c_bot_o c_error_o c_x25.
N4 c_bot_nat c_error_nat c_succ_x16 c_z -> br c_bot_nat (N c_bot_nat c_error_nat c_succ_x16 c_z).
S3 c_bot_nat c_error_nat c_succ_x16 c_z -> br c_bot_nat (S c_bot_nat c_error_nat c_succ_x16 c_z).
Check2 x0 c_bot_o c_error_o c_x25 -> br c_bot_o (Check x0 c_bot_o c_error_o c_x25).
Main1 x0 c_bot_o c_error_o c_x25 -> br c_bot_o (Main x0 c_bot_o c_error_o c_x25).
%APT
intial state: q
transitions:
q c_bot_o -> \true.
q c_x25 -> \true.
q br -> (2, q) \land (1, q).
priorities:
q -> 0.
<< original HORS ***/
%HES
S_SSSSS5#0 =_\nu SSSSS5#0 c_bot_o c_error_o c_x25;
KK_c_bot_nat#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. c_bot_nat#0;
KK_c_error_nat#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. c_error_nat#0;
KK_c_succ_x16#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. c_succ_x16#0;
KK_c_z#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. c_z#0;
KK_c_bot_o#0 =_\nu \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. c_bot_o#0;
KK_c_error_o#0 =_\nu \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. c_error_o#0;
KK_c_x25#0 =_\nu \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. c_x25#0;
SSSSS5#0 =_\nu \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. br c_bot_o#0 (SSSSS#0 c_bot_o#0 c_error_o#0 c_x25#0);
K_ok#0 =_\nu \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. c_x25#0;
K_succ#0 =_\nu \lambda x0#0. \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. x0#0 c_succ_x16#0 c_error_nat#0 c_succ_x16#0 c_succ_x16#0;
K_z#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. c_z#0;
K_error_nat#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. c_error_nat#0;
K_error_o#0 =_\nu \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. c_error_o#0;
SSSSS#0 =_\nu \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. Main1#0 S3#0 c_bot_o#0 c_error_o#0 c_x25#0;
N#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. br (K_succ#0 K_z#0 c_bot_nat#0 c_error_nat#0 c_succ_x16#0 c_z#0) (K_succ#0 N4#0 c_bot_nat#0 c_error_nat#0 c_succ_x16#0 c_z#0);
S#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. N4#0 c_bot_nat#0 c_error_nat#0 c_succ_x16#0 c_z#0;
Check#0 =_\nu \lambda x0#0. \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. x0#0 c_bot_o#0 c_error_o#0 (K_ok#0 c_bot_o#0 c_error_o#0 c_x25#0) (K_error_o#0 c_bot_o#0 c_error_o#0 c_x25#0);
Main#0 =_\nu \lambda x0#0. \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. Check2#0 x0#0 c_bot_o#0 c_error_o#0 c_x25#0;
N4#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. br c_bot_nat#0 (N#0 c_bot_nat#0 c_error_nat#0 c_succ_x16#0 c_z#0);
S3#0 =_\nu \lambda c_bot_nat#0. \lambda c_error_nat#0. \lambda c_succ_x16#0. \lambda c_z#0. br c_bot_nat#0 (S#0 c_bot_nat#0 c_error_nat#0 c_succ_x16#0 c_z#0);
Check2#0 =_\nu \lambda x0#0. \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. br c_bot_o#0 (Check#0 x0#0 c_bot_o#0 c_error_o#0 c_x25#0);
Main1#0 =_\nu \lambda x0#0. \lambda c_bot_o#0. \lambda c_error_o#0. \lambda c_x25#0. br c_bot_o#0 (Main#0 x0#0 c_bot_o#0 c_error_o#0 c_x25#0);
c_bot_o =_\nu <c_bot_o#0>\true;
c_error_o =_\nu <c_error_o#0>\true;
c_x25 =_\nu <c_x25#0>\true;
br =_\nu \lambda y$1#0. \lambda y$2#0. <br#0>([$1]y$1#0 \land [$2]y$2#0);
%LTS
initial state: @q
transitions:
@q c_bot_o#0 -> true.
@q c_x25#0 -> true.
@q br#0 -> $1@q&$2@q.
$1@q&$2@q $1 -> @q.
$1@q&$2@q $2 -> @q.
