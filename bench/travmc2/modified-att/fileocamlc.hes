/*** original HORS >>
%HORS
S -> ReadSec C1.
C1 rstring rstruct clreader -> rstruct (rstring (Loop rstring rstruct clreader)).
Loop rstring rstruct clreader -> br (DLLinit rstring rstruct clreader) (Loop rstring rstruct clreader).
DLLinit rstring rstruct clreader -> rstring (rstruct (clreader end)).
ReadSec k -> br (k Nop Nop Nop) (Newr (ReadSec2 k)).
ReadSec2 k x -> ReadToc x (ReadSec3 x k).
ReadSec3 x k -> k (Rsecstr x) (Rsecstruct x) (Close x).
Nop k -> k.
ReadToc x k -> SeekIn x (InputBinary x (ReallyInput x (SeekIn x (ReadTocLoop x k)))).
ReadTocLoop x k -> br k (ReallyInput x (InputBinary x (ReadTocLoop x k))).
Rsecstr x k -> SeekSec x (ReallyInput x k).
Rsecstruct x k -> SeekSec x (InputValue x k).
SeekSec x k -> SeekSub x k.
SeekSub x k -> br (SeekIn x k) (SeekSub x (SeekIn x k)).
SeekIn x k -> Read x k.
ReallyInput x k -> Read x k.
InputBinary x k -> Read x k.
InputValue x k -> Read x k.
I x y -> x y.
K x y -> y.
Newr k -> br (newr (k I)) (k K).
Close x k -> x Close_gen k.
Read x k -> x Read_gen k.
Close_gen gen2819 -> close gen2819.
Read_gen gen2820 -> read gen2820.
%APT
intial state: q0
transitions:
q0 br -> (2, q0) \land (1, q0).
q0 end -> \true.
q0 newr -> (1, qr).
qr br -> ((2, qr) \land (1, qc)) \lor ((2, qr) \land (1, qr)).
qr newr -> (1, qany).
qr close -> (1, qc).
qr read -> (1, qr).
qany br -> (2, qany) \land (1, qany).
qany end -> \true.
qany close -> (1, qany).
qany read -> (1, qany).
qc end -> \true.
priorities:
q0 -> 2.
qr -> 2.
qany -> 2.
qc -> 2.
<< original HORS ***/
%HES
S#2 =_\nu ReadSec#2 C1#2;
C1#2 =_\nu \lambda rstring#2. \lambda rstruct#2. \lambda clreader#2. rstruct#2 (F'113#2 rstring#2 rstruct#2 clreader#2);
F'113#2 =_\nu \lambda rstring#2. \lambda rstruct#2. \lambda clreader#2. rstring#2 (Loop#2 rstring#2 rstruct#2 clreader#2);
Loop#2 =_\nu \lambda rstring#2. \lambda rstruct#2. \lambda clreader#2. br (DLLinit#2 rstring#2 rstruct#2 clreader#2) (Loop#2 rstring#2 rstruct#2 clreader#2);
DLLinit#2 =_\nu \lambda rstring#2. \lambda rstruct#2. \lambda clreader#2. rstring#2 (F'114#2 rstruct#2 clreader#2);
F'114#2 =_\nu \lambda rstruct#2. \lambda clreader#2. rstruct#2 (clreader#2 end);
ReadSec#2 =_\nu \lambda k#2. br (k#2 Nop#2 Nop#2 Nop#2) (F'115#2 k#2);
F'115#2 =_\nu \lambda k#2. Newr#2 (ReadSec2#2 k#2);
ReadSec2#2 =_\nu \lambda k#2. \lambda x#2. ReadToc#2 x#2 (ReadSec3#2 x#2 k#2);
ReadSec3#2 =_\nu \lambda x#2. \lambda k#2. k#2 (Rsecstr#2 x#2) (Rsecstruct#2 x#2) (Close#2 x#2);
Nop#2 =_\nu \lambda k#2. k#2;
ReadToc#2 =_\nu \lambda x#2. \lambda k#2. SeekIn#2 x#2 (F'118#2 x#2 k#2);
F'118#2 =_\nu \lambda x#2. \lambda k#2. InputBinary#2 x#2 (F'117#2 x#2 k#2);
F'117#2 =_\nu \lambda x#2. \lambda k#2. ReallyInput#2 x#2 (F'116#2 x#2 k#2);
F'116#2 =_\nu \lambda x#2. \lambda k#2. SeekIn#2 x#2 (ReadTocLoop#2 x#2 k#2);
ReadTocLoop#2 =_\nu \lambda x#2. \lambda k#2. br k#2 (F'120#2 x#2 k#2);
F'120#2 =_\nu \lambda x#2. \lambda k#2. ReallyInput#2 x#2 (F'119#2 x#2 k#2);
F'119#2 =_\nu \lambda x#2. \lambda k#2. InputBinary#2 x#2 (ReadTocLoop#2 x#2 k#2);
Rsecstr#2 =_\nu \lambda x#2. \lambda k#2. SeekSec#2 x#2 (ReallyInput#2 x#2 k#2);
Rsecstruct#2 =_\nu \lambda x#2. \lambda k#2. SeekSec#2 x#2 (InputValue#2 x#2 k#2);
SeekSec#2 =_\nu \lambda x#2. \lambda k#2. SeekSub#2 x#2 k#2;
SeekSub#2 =_\nu \lambda x#2. \lambda k#2. br (SeekIn#2 x#2 k#2) (F'121#2 x#2 k#2);
F'121#2 =_\nu \lambda x#2. \lambda k#2. SeekSub#2 x#2 (SeekIn#2 x#2 k#2);
SeekIn#2 =_\nu \lambda x#2. \lambda k#2. Read#2 x#2 k#2;
ReallyInput#2 =_\nu \lambda x#2. \lambda k#2. Read#2 x#2 k#2;
InputBinary#2 =_\nu \lambda x#2. \lambda k#2. Read#2 x#2 k#2;
InputValue#2 =_\nu \lambda x#2. \lambda k#2. Read#2 x#2 k#2;
I#2 =_\nu \lambda x#2. \lambda y#2. x#2 y#2;
K#2 =_\nu \lambda x#2. \lambda y#2. y#2;
Newr#2 =_\nu \lambda k#2. br (F'122#2 k#2) (k#2 K#2);
F'122#2 =_\nu \lambda k#2. newr (k#2 I#2);
Close#2 =_\nu \lambda x#2. \lambda k#2. x#2 Close_gen#2 k#2;
Read#2 =_\nu \lambda x#2. \lambda k#2. x#2 Read_gen#2 k#2;
Close_gen#2 =_\nu \lambda gen2819#2. close gen2819#2;
Read_gen#2 =_\nu \lambda gen2820#2. read gen2820#2;
br =_\nu \lambda y$1#2. \lambda y$2#2. <br#2>([$1]y$1#2 \land [$2]y$2#2);
end =_\nu <end#2>\true;
newr =_\nu \lambda y$1#2. <newr#2>[$1]y$1#2;
close =_\nu \lambda y$1#2. <close#2>[$1]y$1#2;
read =_\nu \lambda y$1#2. <read#2>[$1]y$1#2;
%LTS
initial state: @q0
transitions:
@q0 br#2 -> $1@q0&$2@q0.
@q0 end#2 -> true.
@q0 newr#2 -> $1@qr.
$1@q0&$2@q0 $1 -> @q0.
$1@q0&$2@q0 $2 -> @q0.
$1@qr $1 -> @qr.
@qr br#2 -> $1@qr&$2@qr.
@qr br#2 -> $1@qc&$2@qr.
@qr newr#2 -> $1@qany.
@qr close#2 -> $1@qc.
@qr read#2 -> $1@qr.
$1@qr&$2@qr $1 -> @qr.
$1@qr&$2@qr $2 -> @qr.
$1@qc&$2@qr $1 -> @qc.
$1@qc&$2@qr $2 -> @qr.
@qc end#2 -> true.
$1@qany $1 -> @qany.
@qany br#2 -> $1@qany&$2@qany.
@qany end#2 -> true.
@qany close#2 -> $1@qany.
@qany read#2 -> $1@qany.
$1@qc $1 -> @qc.
$1@qany&$2@qany $1 -> @qany.
$1@qany&$2@qany $2 -> @qany.
